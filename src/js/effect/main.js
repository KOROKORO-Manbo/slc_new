// Generated by CoffeeScript 1.6.1
(function () {

  var e, t = this,
    n = {}.hasOwnProperty,
    r = function (e, t) {               // e：子クラス、t：親クラス
      function i() {                    // 子クラスをコンストラクタにして親クラスのprototypeを引き継いだクラスを定義し
        this.constructor = e            // その一時的に定義したクラスインスタンスを子クラスのprototypeに代入し継承している
      }
      for (var r in t) n.call(t, r) && (e[r] = t[r]);
      i.prototype = t.prototype;
      e.prototype = new i;
      e.__super__ = t.prototype;
      return e
    };
  e = this;
  e.LUANA = {};
  e.LUANA_CLASS = {};

  e.LUANA_CLASS.baseMain = function () {
    function t() {
      var e = this;
      this._checkWebFont = function () {
        return t.prototype._checkWebFont.apply(e, arguments)
      };
      this._checkSoundSwf = function () {
        return t.prototype._checkSoundSwf.apply(e, arguments)
      };
      this._setupSoundSwf = function () {
        return t.prototype._setupSoundSwf.apply(e, arguments)
      };
      this._resize = function () {
        return t.prototype._resize.apply(e, arguments)
      };
      this._update = function () {
        return t.prototype._update.apply(e, arguments)
      };
      this._updateList = [];
      this._resizeList = [];
      this.ws = {
        w: 0,
        h: 0,
        oldW: -1,
        oldH: -1
      };
      this.ms = {
        x: 0,
        y: 0,
        oldX: 0,
        oldY: 0
      };
      // this._stats;
      this.isStopBgm = !0;
      this.isWebfont = !1;
      this._webFont = {}
    }
    t.prototype._init = function () {
      setInterval(this._update, 1e3 / 30);      //e.LUANA.conf.FPS
      $(window).bind("resize", this._resize);
      this._resize();
    };
    t.prototype._update = function () {
      var t, n, r, i, s;
      s = this._updateList;
      for (t = r = 0, i = s.length; r < i; t = ++r) {
        n = s[t];
        n()
      }
      // if (e.LUANA.conf.STATS) return this._stats.update()
    };
    t.prototype.addUpdate = function (e) {
      return this._updateList.push(e)
    };
    t.prototype.delUpdate = function (e) {
      var t, n, r, i, s, o;
      t = [];
      o = this._updateList;
      for (n = i = 0, s = o.length; i < s; n = ++i) {
        r = o[n];
        r !== e && t.push(r)
      }
      return this._updateList = t
    };
    t.prototype._resize = function () {
      var e, t, n, r, i, s, o;
      r = $(window).width();
      e = $(window).height();
      if (r !== this.ws.oldW || e !== this.ws.oldH) {
        this.ws.w = r;
        this.ws.h = e;
        o = this._resizeList;
        for (t = i = 0, s = o.length; i < s; t = ++i) {
          n = o[t];
          n()
        }
      }
      this.ws.oldW = r;
      return this.ws.oldH = e
    };
    t.prototype.addResize = function (e, t) {
      this._resizeList.push(e);
      if (t != null && t) return e()
    };
    t.prototype.delResize = function (e) {
      var t, n, r, i, s, o;
      t = [];
      o = this._resizeList;
      for (n = i = 0, s = o.length; i < s; n = ++i) {
        r = o[n];
        r !== e && t.push(r)
      }
      return this._resizeList = t
    };
    return t
  }();

  e.LUANA_CLASS.main = function (t) {
    function n() {
      n.__super__.constructor.call(this);
      this.con;
      this._init()
    }
    r(n, t);
    n.prototype.setup = function () {
      return this.con = new e.LUANA_CLASS.contentsView
    };
    return n
  }(e.LUANA_CLASS.baseMain);

  e.LUANA_CLASS.contentsView = function () {
    function t() {
      var n = this;
      this._completePanel = function () {
        return t.prototype._completePanel.apply(n, arguments)
      };
      this._completeHeader = function () {
        return t.prototype._completeHeader.apply(n, arguments)
      };
      this.resize = function () {
        return t.prototype.resize.apply(n, arguments)
      };
      this.update = function () {
        return t.prototype.update.apply(n, arguments)
      };
      this._elm;
      this._header;
      this._menu;
      this._info;
      this._panel;
      this._footer;
      this._loading;
      this._preLoader;
      /* this._preImages = [      プリロード用画像パス配列
        e.LUANA.conf.IMGDIR_CMN + "header/leaf/1.png", e.LUANA.conf.IMGDIR_CMN + "header/leaf/2.png", e.LUANA.conf.IMGDIR_CMN + "header/leaf/3.png", e.LUANA.conf.IMGDIR_CMN + "header/leaf/4.png", e.LUANA.conf.IMGDIR_CMN + "header/leaf/5.png", e.LUANA.conf.IMGDIR_CMN + "header/leaf/6.png", e.LUANA.conf.IMGDIR_CMN + "header/leaf/7.png", e.LUANA.conf.IMGDIR_CMN + "header/leaf/8.png", e.LUANA.conf.IMGDIR_CMN + "header/leaf/9.png", e.LUANA.conf.IMGDIR_CMN + "header/leaf/10.png", e.LUANA.conf.IMGDIR_CMN + "header/leaf/11.png", e.LUANA.conf.IMGDIR_CMN + "header/sound/sound0.png", e.LUANA.conf.IMGDIR_CMN + "header/sound/sound1.png", e.LUANA.conf.IMGDIR_CMN + "panel/menu/txt0_off.png", e.LUANA.conf.IMGDIR_CMN + "panel/menu/txt0_on.png", e.LUANA.conf.IMGDIR_CMN + "panel/menu/txt1_off.png", e.LUANA.conf.IMGDIR_CMN + "panel/menu/txt1_on.png", e.LUANA.conf.IMGDIR_CMN + "panel/menu/txt2_off.png", e.LUANA.conf.IMGDIR_CMN + "panel/menu/txt2_on.png", e.LUANA.conf.IMGDIR_CMN + "panel/menu/txt3_off.png", e.LUANA.conf.IMGDIR_CMN + "panel/menu/txt3_on.png", e.LUANA.conf.IMGDIR_TOP + "info/download_off.png", e.LUANA.conf.IMGDIR_TOP + "info/download_on.png", e.LUANA.conf.IMGDIR_TOP + "info/present_off.png", e.LUANA.conf.IMGDIR_TOP + "info/present_on.png", e.LUANA.conf.IMGDIR_TOP + "info/info0.png", e.LUANA.conf.IMGDIR_TOP + "info/info2.png", e.LUANA.conf.IMGDIR_TOP + "menu/about_off.png", e.LUANA.conf.IMGDIR_TOP + "menu/about_on.png", e.LUANA.conf.IMGDIR_TOP + "menu/board_off.png", e.LUANA.conf.IMGDIR_TOP + "menu/board_on.png", e.LUANA.conf.IMGDIR_TOP + "menu/cm_off.png", e.LUANA.conf.IMGDIR_TOP + "menu/cm_on.png", e.LUANA.conf.IMGDIR_TOP + "menu/menu0.png", e.LUANA.conf.IMGDIR_TOP + "menu/menu1.png", e.LUANA.conf.IMGDIR_TOP + "menu/spot_off.png", e.LUANA.conf.IMGDIR_TOP + "menu/spot_on.png", e.LUANA.conf.IMGDIR_TOP + "fb_on.png", e.LUANA.conf.IMGDIR_TOP + "fb_off.png"

      ];*/
      this._cmnFooter;
      this._fb;
      this._init()
    }
    t.prototype._init = function () {
      var t, n, r, i, s, o;
      $("body").css("overflow-x", "hidden");
      this._elm = $("#effectLayer");
      this._elm.css({
        position: "absolute",
        top: 60,
        zIndex: -9999
      });
      return this.add()
    };
    t.prototype.add = function () {
      t = new e.LUANA_CLASS.effectView($("body"), "effect");    // 本来this._header.onCompleteハンドラ内で実行されるものだが
      return t.add()                                            // headerは追加しないで効果だけを発言するようにここに持ってきた
      e.LUANA.main.addResize(this.resize, !0);
      return $("body").css("overflow-x", "visible")
    };
    t.prototype.update = function () {};
    t.prototype.resize = function () {
      var t, n;
      n = e.LUANA.main.ws.w;
      t = e.LUANA.main.ws.h;
      return this._elm.css({
        left: ~~(n * .5)
      })
    };
    return t
  }();

  $(window).load(function () {
    // e.LUANA.conf = new e.LUANA_CLASS.conf;
    e.LUANA.main = new e.LUANA_CLASS.main;
    return e.LUANA.main.setup()
  });

  e.LUANA_CLASS.effectView = function () {
    function t(e, n) {
      var r = this;
      this.resize = function () {
        return t.prototype.resize.apply(r, arguments)
      };
      this.update = function () {
        return t.prototype.update.apply(r, arguments)
      };
      this._completeEffect = function () {
        return t.prototype._completeEffect.apply(r, arguments)
      };
      this._startEffect = function () {
        return t.prototype._startEffect.apply(r, arguments)
      };
      this._parent = e;
      this._elmId = n;
      this._elm;
      this._type = 0;
      this._delay = 1;   //15e3
      this._timer;
      this._effect;
      // this._init()
    }
    // t.prototype._init = function () {};
    t.prototype.add = function () {
      this._parent.append(_util.tag("div", [{
        name: "id",
        val: this._elmId
      }]));
      this._elm = $("#" + this._elmId);
      this._elm.css({
        position: "fixed",
        top: 0,
        left: 0,
        zIndex: 9999
      });
      // this._type = _util.random(0, 1);
      this._type = 1;                               // 葉と雨の分岐をやめて、雨のみにする
      return setTimeout(this._startEffect, 1)       // 初回エフェクト開始（元は大きな数字だった）
    };
    t.prototype._startEffect = function () {
      if (this._effect != null) {
        this._effect.del();
        this._effect = null
      }
      this._type === 0 ? this._effect = new e.LUANA_CLASS.leafView(this._elm, this._elmId + "_leaf") : this._effect = new e.LUANA_CLASS.rainView(this._elm, this._elmId + "_rain");
      this._effect.add();
      return this._effect.onComplete = this._completeEffect
    };
    t.prototype._completeEffect = function () {
      // this._type = this._type === 0 ? 1 : 0;     // this._type =  0; ずっと葉っぱにするとき
      this._type = 1;                               // 葉と雨の分岐をやめて、雨のみにする
      if (this._timer != null) {
        clearTimeout(this._timer);
        this._timer = null
      }
      if (this._effect != null) {
        this._effect.del();
        this._effect = null
      }                                             // ↓↓↓エフェクトターン間隔
      return this._timer = setTimeout(this._startEffect, this._delay)
    };
    t.prototype.update = function () {};
    t.prototype.resize = function () {};
    return t
  }();

  e.LUANA_CLASS.rainView = function () {
    function t(e, n) {
      var r = this;
      this.update = function () {
        return t.prototype.update.apply(r, arguments)
      };
      this._parent = e;
      this._elmId = n;
      this._elm;
      this._num = 10;
      this._isUpdate = !0;
      this._list = [];
      this.onComplete;
      // this._init()
    }
    // t.prototype._init = function () {
    //   if (!Modernizr.csstransforms3d) return this._num = 4
    // };
    t.prototype.add = function () {
      var t, n, r, i, s;
      this._parent.append(_util.tag("div", [{
        name: "id",
        val: this._elmId
      }]));
      this._elm = $("#" + this._elmId);
      this._elm.css({
        position: "fixed",
        top: 0,
        left: 0
      });
      s = e.LUANA.main.ws.w;
      t = e.LUANA.main.ws.h;
      r = s / this._num;
      n = 0;
      while (n < this._num) {
        i = new e.LUANA_CLASS.rainParts(this._elm, n);
        i.add(n * r + _util.range(30), -300);
        this._list.push(i);
        n++
      }
      return e.LUANA.main.addUpdate(this.update)
    };
    t.prototype.update = function () {
      var e, t, n, r, i, s;
      if (!this._isUpdate) return;
      e = 0;
      s = this._list;
      for (t = r = 0, i = s.length; r < i; t = ++r) {
        n = s[t];
        n.update();
        n.checkDead() && e++
      }
      if (e >= this._list.length) {
        this._isUpdate = !1;
        if (this.onComplete != null) return this.onComplete()
      }
    };
    t.prototype._delParts = function () {
      var e, t, n, r, i;
      i = this._list;
      for (e = n = 0, r = i.length; n < r; e = ++n) {
        t = i[e];
        t.del();
        this._list[e] = null
      }
      return this._list = null
    };
    t.prototype.del = function () {
      e.LUANA.main.delUpdate(this.update);
      this._delParts();
      this._parent = null;
      if (this._elm != null) {
        this._elm.remove();
        this._elm = null
      }
      return this.onComplete = null
    };
    return t
  }();
  e.LUANA_CLASS.rainParts = function () {
    function t(e, n) {
      var r = this;
      this.checkDead = function () {
        return t.prototype.checkDead.apply(r, arguments)
      };
      this.update = function () {
        return t.prototype.update.apply(r, arguments)
      };
      this._parent = e;
      this._id = n;
      this._elmId = "effectRain" + n;
      this._elm;
      this._img;
      this._anm = {};
      this._float;
      this._use3d = Modernizr.csstransforms3d;
      // this._init()
    }
    // t.prototype._init = function () {};
    t.prototype.add = function (t, n) {
      var r;
      this._parent.append(_util.tag("div", [{
        name: "id",
        val: this._elmId
      }]));
      this._elm = $("#" + this._elmId);
      this._elm.css({
        position: "absolute",
        top: n,
        left: t
      });
      this._anm.s = _util.random(30, 50) / 100;
      this._anm.r = _util.range(10);
      this._anm.cnt = 0;
      this._anm.delay = _util.random(0, 300);                     // この感覚が大きいと雨つぶ同士の間隔が広がる
      this._anm.dead = !1;                                        // 下のthis._anm.spdYのインクリの数字と合わせてシトシト感を調整する
      this._anm.bY = 0;
      this._anm.spdY = 0;
      this._float = new IKERYOU.float(this._anm, [{
        target: "r",
        range: _util.random(5, 10),
        speed: _util.range(10) / 10
      }]);
      r = "./images/effect/rain" + String(_util.random(0, 3)) + ".png";
      this._elm.append(_util.tag("img", [{
        name: "src",
        val: r
      }, {
        name: "id",
        val: this._elmId + "_img"
      }]));
      this._img = $("#" + this._elmId + "_img");
      this._img.css({
        position: "absolute",
        top: 0,
        left: 0
      });
      return this._img.css(_util.getVendorCss("transform", _util.scaleX(this._anm.s) + " " + _util.scaleY(this._anm.s)))
    };
    t.prototype.update = function () {
      // if (this._anm.dead) { return; }
      if (this._anm.bY > e.LUANA.main.ws.h + 100) {
        this._anm.spdY = 0;
        this._anm.bY = 0;
        var maxRange = $(window).width();
        this._img.css({left: _util.random(-100, maxRange)});
        return;
      }
      this._float.update();
      if (++this._anm.cnt >= this._anm.delay) {
        this._anm.spdY += .3;
        this._anm.bY += this._anm.spdY;
        this._elm.css(_util.getVendorCss("transform", _util.translate3d(0, this._anm.bY, 0, this._use3d)));
        // this._anm.bY > e.LUANA.main.ws.h + 10 && (this._anm.dead = !0)  // 雨粒ごとに画面高さ＋いくつでデッド判定するか
      }
      return this._img.css(_util.getVendorCss("transform", _util.rotate(this._anm.r) + " " + _util.translate3d(this._anm.x, this._anm.y) + _util.scaleX(this._anm.s) + " " + _util.scaleY(this._anm.s)))
    };
    t.prototype.checkDead = function () {
      return this._anm.dead
    };
    t.prototype.del = function () {
      if (this._img != null) {
        this._img.remove();
        this._img = null
      }
      if (this._elm != null) {
        this._elm.remove();
        this._elm = null
      }
      this._anm = null;
      this._float = null;
      return this._parent = null
    };
    return t
  }();

  e.LUANA_CLASS.leafView = function () {
    function t(e, n) {
      var r = this;
      this.update = function () {
        return t.prototype.update.apply(r, arguments)
      };
      this._parent = e;
      this._elmId = n;
      this._elm;
      this._num = 10;
      this._isUpdate = !0;
      this._list = [];
      this.onComplete;
      this._init()
    }
    t.prototype._init = function () {
      if (!Modernizr.csstransforms3d) return this._num = 5
    };
    t.prototype.add = function () {
      var t, n, r, i, s, o;
      this._parent.append(_util.tag("div", [{
        name: "id",
        val: this._elmId
      }]));
      this._elm = $("#" + this._elmId);
      this._elm.css({
        position: "fixed",
        top: 0,
        left: 0
      });
      s = e.LUANA.main.ws.w;
      t = e.LUANA.main.ws.h;
      i = 50;
      n = 0;
      while (n < this._num) {
        o = n % 2 === 0 ? i : s - i;
        o += _util.range(200);
        r = new e.LUANA_CLASS.leafParts(this._elm, n);
        r.add(o, t + 300);
        this._list.push(r);
        n++
      }
      return e.LUANA.main.addUpdate(this.update)
    };
    t.prototype.update = function () {
      var e, t, n, r, i, s;
      if (!this._isUpdate) return;
      e = 0;
      s = this._list;
      for (t = r = 0, i = s.length; r < i; t = ++r) {
        n = s[t];
        n.update();
        n.checkDead() && e++
      }
      if (e >= this._list.length) {
        this._isUpdate = !1;
        if (this.onComplete != null) return this.onComplete()
      }
    };
    t.prototype._delParts = function () {
      var e, t, n, r, i;
      i = this._list;
      for (e = n = 0, r = i.length; n < r; e = ++n) {
        t = i[e];
        t.del();
        this._list[e] = null
      }
      return this._list = null
    };
    t.prototype.del = function () {
      e.LUANA.main.delUpdate(this.update);
      this._delParts();
      this._parent = null;
      if (this._elm != null) {
        this._elm.remove();
        this._elm = null
      }
      return this.onComplete = null
    };
    return t
  }();

  e.LUANA_CLASS.leafParts = function () {
    function t(e, n) {
      var r = this;
      this.checkDead = function () {
        return t.prototype.checkDead.apply(r, arguments)
      };
      this.update = function () {
        return t.prototype.update.apply(r, arguments)
      };
      this._parent = e;
      this._id = n;
      this._elmId = "effectLeaf" + n;
      this._elm;
      this._img;
      this._anm = {};
      this._float;
      this._use3d = Modernizr.csstransforms3d;
      this._init()
    }
    t.prototype._init = function () {};
    t.prototype.add = function (t, n) {
      var r;
      this._parent.append(_util.tag("div", [{
        name: "id",
        val: this._elmId
      }]));
      this._elm = $("#" + this._elmId);
      this._elm.css({
        position: "absolute",
        top: n,
        left: t
      });
      this._anm.x = _util.range(100);
      this._anm.y = _util.range(100);
      this._anm.r = _util.range(100);
      this._anm.s = _util.random(60, 100) / 100;
      this._anm.cnt = 0;
      this._anm.delay = _util.random(0, 20);
      this._anm.dead = !1;
      this._anm.bX = 0;
      this._anm.bY = 0;
      this._anm.spdX = _util.range(10) / 20;
      this._anm.spdY = 0;
      this._float = new IKERYOU.float(this._anm, [{
        target: "x",
        range: _util.random(250, 500),
        speed: _util.range(50) / 10
      }, {
        target: "y",
        range: _util.random(250, 300),
        speed: _util.range(50) / 10
      }, {
        target: "r",
        range: _util.random(20, 100),
        speed: _util.range(30) / 10
      }]);
      r = "./images/effect/leaf" + String(_util.random(0, 3)) + ".png";
      this._elm.append(_util.tag("img", [{
        name: "src",
        val: r
      }, {
        name: "id",
        val: this._elmId + "_img"
      }]));
      this._img = $("#" + this._elmId + "_img");
      return this._img.css({
        position: "absolute",
        top: 0,
        left: 0
      })
    };
    t.prototype.update = function () {
      if (this._anm.dead) return;
      this._float.update();
      if (++this._anm.cnt >= this._anm.delay) {
        this._anm.spdY += .35;
        this._anm.bY -= this._anm.spdY;
        this._anm.bX += this._anm.spdX;
        this._elm.css(_util.getVendorCss("transform", _util.translate3d(this._anm.bX, this._anm.bY, 0, this._use3d)));
        this._anm.bY < -(e.LUANA.main.ws.h + 800) && (this._anm.dead = !0)
      }
      return this._img.css(_util.getVendorCss("transform", _util.rotate(this._anm.r) + " " + _util.translate3d(this._anm.x, this._anm.y) + _util.scaleX(this._anm.s) + " " + _util.scaleY(this._anm.s)))
    };
    t.prototype.checkDead = function () {
      return this._anm.dead
    };
    t.prototype.del = function () {
      if (this._img != null) {
        this._img.remove();
        this._img = null
      }
      if (this._elm != null) {
        this._elm.remove();
        this._elm = null
      }
      this._anm = null;
      this._float = null;
      return this._parent = null
    };
    return t
  }();

}).call(this);
